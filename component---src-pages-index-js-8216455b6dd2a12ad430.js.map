{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Index","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","className","map","node","frontmatter","fields","slug","key","to","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"iPASMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,YAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,YAAC,IAAD,CAAKG,MAAM,cACX,uBAASK,UAAU,wBACjB,mBAAKA,UAAU,aACb,kBAAIA,UAAU,SAAd,YACA,kBAAIA,UAAU,YAAd,uCAGJ,uBAASA,UAAU,WACjB,YAAC,IAAD,OAEF,uBAASA,UAAU,WAChBJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,uBAASC,IAAKJ,EAAKE,OAAOC,MACxB,0BACE,sBACE,YAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOV,KAGjC,2BACE,iBACEa,wBAAyB,CACvBC,OAAQP,EAAKC,YAAYO,aAAeR,EAAKS,mB,GA/B/CC,IAAMC,WA4CX1B,YAER,IAAM2B,EAAS","file":"component---src-pages-index-js-8216455b6dd2a12ad430.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nimport './styles.scss';\n\nclass Index extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <section className=\"hero is-dark is-bold\">\n          <div className=\"hero-body\">\n            <h1 className=\"title\">shun.dev</h1>\n            <h2 className=\"subtitle\">Shun Takahashi's personal website</h2>\n          </div>\n        </section>\n        <section className=\"section\">\n          <Bio />\n        </section>\n        <section className=\"section\">\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3>\n                    <Link to={node.fields.slug}>{title}</Link>\n                  </h3>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                </section>\n              </article>\n            );\n          })}\n        </section>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}