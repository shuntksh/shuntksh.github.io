{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","site","siteMetadata","author","social","className","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","title","pageContext","previous","next","lang","frontmatter","defaultLangKey","location","description","excerpt","style","marginBottom","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"qIAqBeA,IAlBH,WACV,IADgB,EACN,OAasBC,KAAKC,aAdrB,EAcRC,OAdQ,EAcAC,OAChB,OAAO,mBAAKC,UAAU,gB,uTCXlBC,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKV,KAAKC,aAAaY,MAF7C,EAGoBL,KAAKC,MAAMK,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KACZC,EAAOV,EAAKW,YAAYD,MAAQT,KAAKC,MAAMC,KAAKV,KAAKC,aAAakB,eACxE,OACE,YAAC,IAAD,CAAQC,SAAUZ,KAAKC,MAAMW,SAAUP,MAAOD,EAAWK,KAAMA,GAC7D,YAAC,IAAD,CACEJ,MAAON,EAAKW,YAAYL,MACxBQ,YAAad,EAAKW,YAAYG,aAAed,EAAKe,UAEpD,2BACE,0BACE,kBACEC,MAAO,CACLC,aAAc,IAGfjB,EAAKW,YAAYL,OAEpB,iBACEU,MAAO,CACLE,QAAS,UAGVlB,EAAKW,YAAYQ,OAGtB,uBAASC,wBAAyB,CAAEC,OAAQrB,EAAKsB,QACjD,kBAAIN,MAAO,KACX,0BACE,YAAC,IAAD,QAIJ,uBACE,kBACEA,MAAO,CACLE,QAAS,OACTK,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,sBACGlB,GACC,YAAC,OAAD,CAAMmB,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACKtB,EAASG,YAAYL,QAI9B,sBACGG,GACC,YAAC,OAAD,CAAMkB,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKE,YAAYL,MADpB,W,GAvDeyB,IAAMC,WAmEtBlC,YAER,IAAMmC,EAAS","file":"component---src-templates-blog-post-js-3a5a4690c56ab4c81dfd.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n  return <div className=\"container\"></div>;\n};\n\nexport default Bio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n    const lang = post.frontmatter.lang || this.props.data.site.siteMetadata.defaultLangKey;\n    return (\n      <Layout location={this.props.location} title={siteTitle} lang={lang}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                display: 'block',\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr style={{}} />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n              listStyle: 'none',\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        defaultLangKey\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        lang\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}